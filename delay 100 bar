import ProgressBar from './ProgressBar';
import { useState, useEffect } from 'react';
import { Browse } from '../icons/Browse';
import FileAttach from '../icons/fileAttach';
import Left from '../icons/LeftRed';
import { TEXT_KEYS } from '../../utils/textKeys';

const FileUploadField = ({
	label,
	name,
	register,
	errors,
	showProgress,
	startProgress,
	progress,
}) => {
	const [selectedFileName, setSelectedFileName] = useState('');
	const [hideProgress, setHideProgress] = useState(false);
	const [showCompleteIcon, setShowCompleteIcon] = useState(false);

	const handleFileChange = (e) => {
		const file = e.target.files[0];
		if (file) {
			setSelectedFileName(file.name);
			showProgress && startProgress();
		}
	};

	useEffect(() => {
		if (progress === 100) {
			setTimeout(() => {
				setShowCompleteIcon(true); // Show complete icon after 1 second
				setTimeout(() => {
					setHideProgress(true); // Hide left icon, progress percentage, and progress bar after 1 second
				}, 1000);
			}, 1000);
		}
	}, [progress]);

	return (
		<div className="mb-4 relative">
			<label
				htmlFor={name}
				className="block text-txt_grey text-sm font-bold mb-2"
			>
				{label}
			</label>
			<input
				type="file"
				id={name}
				{...register(name)}
				className="hidden"
				onChange={handleFileChange}
			/>
			<div className="flex items-center">
				<label
					htmlFor={name}
					className={`shadow appearance-none border rounded w-full py-2 px-3 text-txt_grey leading-tight focus:outline-none focus:shadow-outline ${
						errors[name]
							? 'border-brd_r_500'
							: 'border-brd_g_400 hover:border-brd_g_500'
					} cursor-pointer`}
				>
					<div className="flex justify-between">
						<span className="pt-[2px] font-VodafoneRg font-normal text-xl text-txt_grey/70">
							{TEXT_KEYS.COMMON.UPLOAD_FILE}
						</span>
						<div className="ml-2">
							<Browse width="24px" height="24px" className="text-text_02" />
						</div>
					</div>
				</label>
				{errors[name] && (
					<p className="text-support_01 text-xs">{errors[name].message}</p>
				)}
			</div>
			{/* progress bar  */}
			{showProgress && !hideProgress && (
				<div className="mt-6 flex w-full h-8">
					<div>
						<FileAttach />
					</div>
					<div className='w-full pl-5'>
						<div className='flex justify-between'>
							<div className="font-VodafoneRg text-txt_grey text-sm font-normal">
								<p>{selectedFileName}</p>
							</div>
							{progress < 100 && ( // Render left icon and progress percentage if progress is less than 100%
								<div>
									<div className='flex w-[72px] justify-between'>
										<div className='mt-[6.5px]'>
											<Left />
										</div>
										<p className='font-VodafoneRg font-normal text-lg text-txt_grey'>{progress}%</p>
									</div>
								</div>
							)}
							{progress === 100 && showCompleteIcon && ( // Render complete icon when progress is 100%
								<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
									<path d="M25.5766 8.90836L12.485 22L6.66663 16.1817" stroke="#0D0D0D" stroke-miterlimit="10" stroke-linecap="round"/>
								</svg>
							)}
						</div>
						{progress < 100 && ( // Render progress bar if progress is less than 100%
							<div>
								<ProgressBar percent={progress} showPercentage={false} />
							</div>
						)}
					</div>
				</div>
			)}
		</div>
	);
};

export default FileUploadField;
